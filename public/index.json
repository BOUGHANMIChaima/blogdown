
    
    
    
    
    
    
    
    
    
    
    
    
    
    [{"authors":null,"categories":null,"content":"Cha√Øma BOUGHANMI is a junior data scientist at BVA xsight in Paris. Data science was the perfectly suited discipline for her. She is an engineer in statistics and information analysis. She holds a master‚Äôs degree in data science from Universit√© Paris Saclay and a research master‚Äôs degree in information processing and complexity of living systems. Very comfortable with numbers and statistics, she likes to give them meaning and see them have an impact on reality. She has worked in several fields: energy, sports, polling, media and marketing. During her studies, Ms. Boughanmi acquired experience in mathematical modeling, data analysis, programming, data visualization and machine learning. She also had the opportunity, through her engineering internship, her two end-of-study internships for master‚Äôs studies and academic projects, to gain an understanding of the data analysis issues in which she was particularly interested, and to build up experience in this field. Through her studies, Cha√Øma developed a deep interest in large-scale data analysis and processing, forecasting, optimization, data mining and graph theory. She loves bringing numbers to life, giving them meaning and value. She has a very good mastery of programming languages, especially R and R/shiny. She was a member of R-Ladies Tunis when she was a student and is currently one of the organizers of R-Ladies Paris. She also masters Python, SQL, SAS and, not surprisingly, Latex and Git. Miss Boughanmi is a footballer, so when she‚Äôs not playing with numbers and data, she‚Äôs playing with the ball ! That‚Äôs why she chose to work on tactical analysis of team sports during her Master‚Äôs research. With the Paris Saclay team, Cha√Øma and her teammates qualified for the 2022 france championship, finishing first in √Æle de France and 5th in all of France.\n","date":1607817600,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1607817600,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Cha√Øma BOUGHANMI is a junior data scientist at BVA xsight in Paris. Data science was the perfectly suited discipline for her. She is an engineer in statistics and information analysis. She holds a master‚Äôs degree in data science from Universit√© Paris Saclay and a research master‚Äôs degree in information processing and complexity of living systems.","tags":null,"title":"Cha√Øma Boughanmi","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Video button above to view the full talk of the participants. ","date":1697742000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1697742000,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://example.com/talk/progress-through-data-with-r/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/progress-through-data-with-r/","section":"event","summary":"Feedback from data science and scientific R consulting.","tags":[],"title":"Progress Through data with R","type":"event"},{"authors":null,"categories":null,"content":" Creation of SQL queries to extract data from various departmental databases. Processing and analysis of data needed to improve the planning process. Creation, publication and documentation of an interactive dashboard using R shiny. Classification of works and accuracy of consumption using machine learning algorithms. The data is fictitious and the preview is fuzzy for confidential reasons. ","date":1664064000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1664064000,"objectID":"6ff5ae4fe29e6812add25e3f0e9d36f0","permalink":"https://example.com/project/exemple5/","publishdate":"2022-09-25T00:00:00Z","relpermalink":"/project/exemple5/","section":"project","summary":"Enhance the performance of the transmission system process through data analysis and machine learning.","tags":["R","shiny","SQL","Energy Data"],"title":"Shiny application for the energy sector","type":"project"},{"authors":null,"categories":null,"content":"The aim of this project is to study the performance of several machine learning algorithms in automatically detecting falls thanks to the indicators provided. To achieve this, we will follow the following steps using Python programming: Naive Bayes- Naive Bayes Classifier ‚Äì LDA : Linear Discriminant Analysis ‚Äì QDA: Quadratic Discriminant Analysis ‚Äì Logistic regression ‚Äì KNN- K nearest neighbors ‚Äì Decision Tree- Decision Tree ‚Äì Random Forest‚Äì AdaBoost ‚Äì Gradient Boosting.\n","date":1658448000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1658448000,"objectID":"1551ce708e26625310deb3a4c3e3ffec","permalink":"https://example.com/project/example2/","publishdate":"2022-07-22T00:00:00Z","relpermalink":"/project/example2/","section":"project","summary":"Machine learning algorithms used and comparison of results","tags":["Python"],"title":"Fall detection using Machine Learning","type":"project"},{"authors":null,"categories":null,"content":"This is an artificial intelligence challenge I took part in on Kaggle . Using repisotory https://github.com/manthanthakker/BitcoinPrediction for inspiration, it presents implementations of machine learning algorithms (Random Forest, regression, etc.) and recurrent neural networks/long-term memory networks for BitCoin prediction. Furthermore, in our case, we have identified that BitCoin is the most important currency, as most other digital currencies will closely follow its trends. So having an accurate BitCoin prediction model should be an essential part of the project.\nAfter importing the data obtained from Kaggle from our database, which contains historical information on several cryptocurrencies such as Bitcoin and Ethereum, I moved on to the data preparation and cleaning stage.\nThe next step is to deal with the missing values, rather in the difference in timestamp intervals. I started by extracting each cryptocurrency with its corresponding timestamps, visualizing them to better detect the differences and then imputing each missing value by the average of the value before and the value after.\n","date":1655856000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1655856000,"objectID":"d1311ddf745551c9e117aa4bb7e28516","permalink":"https://example.com/project/external-project/","publishdate":"2022-06-22T00:00:00Z","relpermalink":"/project/external-project/","section":"project","summary":"Cryptocurrencies price prediction.","tags":["Python"],"title":"Crypto-prediction","type":"project"},{"authors":null,"categories":null,"content":"Language modeling is a field where unsupervised learning is widely applied, with text analysis and written language detection among the best-known applications. In this project, we want to be able to identify the language of a given text (French or English). To achieve this, we‚Äôre going to use a text data table in which each text has already been labeled by its language. Initially, the aim is to build several models characterizing the different languages, based on the frequency of appearance of symbols (letters) in each language, and then to compare the different models. Each exercise in the project will involve : ¬§ Choose a model ¬§ Estimating its parameters ¬§ Program it and comment on the results.\n","date":1654128000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1654128000,"objectID":"495698671bd8409287525d32526b42aa","permalink":"https://example.com/project/example3/","publishdate":"2022-06-02T00:00:00Z","relpermalink":"/project/example3/","section":"project","summary":"Using algorithms of unsupervised learning to recognize written languages.","tags":["Python"],"title":"Recognition-of-written-languages","type":"project"},{"authors":null,"categories":null,"content":"ShortPath is an R package for determining the shortest path on a graph from a source vertex using two algorithms: the Bellman-Ford algorithm and the Dijkstra algorithm.\nIn particular, this package can be used to determine the shortest path on a graph within the unit square, whose starting vertex has coordinates (0,0) and whose ending vertex has coordinates (1,1).\nAn example of the application of these algorithms is seam carving. This is an image resizing algorithm developed by Shai AVIDAN and Ariel SHAMIR, which resizes the image by removing so-called low-energy pixel paths. The package includes several functions.\nSee the full description by clicking the link above.\n","date":1642809600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1642809600,"objectID":"e8f8d235e8e7f2efd912bfe865363fc3","permalink":"https://example.com/project/example/","publishdate":"2022-01-22T00:00:00Z","relpermalink":"/project/example/","section":"project","summary":"Searching for the shortest path - Application to image reduction and R package creation.","tags":["R"],"title":"ShortPath","type":"project"},{"authors":["Cha√Øma Boughanmi","Âê≥ÊÅ©ÈÅî"],"categories":["Demo","ÊïôÁ®ã"],"content":"import libr print(\u0026#39;hello\u0026#39;) Overview The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site The template can be modified and customised to suit your needs. It‚Äôs a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a no-code solution (write in Markdown and customize with YAML parameters) and having flexibility to later add even deeper personalization with HTML and CSS You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more Get Started üëâ Create a new site üìö Personalize your site üí¨ Chat with the Wowchemy community or Hugo community üê¶ Twitter: @wowchemy @GeorgeCushen #MadeWithWowchemy üí° Request a feature or report a bug for Wowchemy ‚¨ÜÔ∏è Updating Wowchemy? View the Update Tutorial and Release Notes Crowd-funded open-source software To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.\n‚ù§Ô∏è Click here to become a sponsor and help support Wowchemy‚Äôs future ‚ù§Ô∏è As a token of appreciation for sponsoring, you can unlock these awesome rewards and extra features ü¶Ñ‚ú®\nEcosystem Hugo Academic CLI: Automatically import publications from BibTeX Inspiration Check out the latest demo of what you‚Äôll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\nFeatures Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 34+ language packs including English, ‰∏≠Êñá, and Portugu√™s Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files. Themes Wowchemy and its templates come with automatic day (light) and night (dark) mode built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the Demo to see it in action! Day/night mode can also be disabled by the site admin in params.toml.\nChoose a stunning theme and font for your site. Themes are fully customizable.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1607817600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607817600,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"https://example.com/post/getting-started/","publishdate":"2020-12-13T00:00:00Z","relpermalink":"/post/getting-started/","section":"post","summary":"Welcome üëã We know that first impressions are important, so we've populated your new site with some initial content to help you get familiar with everything in no time.","tags":["Academic","ÂºÄÊ∫ê"],"title":"Welcome to Wowchemy, the website builder for Hugo","type":"post"},{"authors":null,"categories":null,"content":"Data The input data for this dashboard is the dataset available from the coronavirus R package thanks to Thomas Neitmann. The data and dashboard are refreshed on a daily basis. The raw data is pulled from the Johns Hopkins University Center for Systems Science and Engineering (JHU CCSE) Coronavirus repository.\nUpdate The data is as of juin 18, 2020 and the dashboard has been updated on juin 19, 2020.\n","date":1592438400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1592438400,"objectID":"93e9b75c9ecc7901b9727ae48b67deee","permalink":"https://example.com/project/example4/","publishdate":"2020-06-18T00:00:00Z","relpermalink":"/project/example4/","section":"project","summary":"The case of Tunisia provides an overview of the 2019 Coronavirus COVID-19 epidemic for Tunisia.","tags":["R framework","Flexdashboard","Markdown"],"title":"Dashboard tracking Covid-19 in Tunisia","type":"project"},{"authors":null,"categories":null,"content":"Wowchemy is designed to give technical content creators a seamless experience. You can focus on the content and Wowchemy handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you‚Äôll find some examples of the types of technical content that can be rendered with Wowchemy.\nExamples Code Wowchemy supports a Markdown extension for highlighting code syntax. You can customize the styles under the syntax_highlighter option in your config/_default/params.yaml file.\n```python import pandas as pd data = pd.read_csv(\u0026#34;data.csv\u0026#34;) data.head() ``` renders as\nimport pandas as pd data = pd.read_csv(\u0026#34;data.csv\u0026#34;) data.head() Mindmaps Wowchemy supports a Markdown extension for mindmaps.\nSimply insert a Markdown markmap code block and optionally set the height of the mindmap as shown in the example below.\nA simple mindmap defined as a Markdown list:\n```markmap {height=\u0026#34;200px\u0026#34;} - Hugo Modules - wowchemy - wowchemy-plugins-netlify - wowchemy-plugins-netlify-cms - wowchemy-plugins-reveal ``` renders as\n- Hugo Modules - wowchemy - wowchemy-plugins-netlify - wowchemy-plugins-netlify-cms - wowchemy-plugins-reveal A more advanced mindmap with formatting, code blocks, and math:\n```markmap - Mindmaps - Links - [Wowchemy Docs](https://wowchemy.com/docs/) - [Discord Community](https://discord.gg/z8wNYzb) - [GitHub](https://github.com/wowchemy/wowchemy-hugo-themes) - Features - Markdown formatting - **inline** ~~text~~ *styles* - multiline text - `inline code` - ```js console.log(\u0026#39;hello\u0026#39;); console.log(\u0026#39;code block\u0026#39;); ``` - Math: $x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$ ``` renders as\n- Mindmaps - Links - [Wowchemy Docs](https://wowchemy.com/docs/) - [Discord Community](https://discord.gg/z8wNYzb) - [GitHub](https://github.com/wowchemy/wowchemy-hugo-themes) - Features - Markdown formatting - **inline** ~~text~~ *styles* - multiline text - `inline code` - ```js console.log(\u0026#39;hello\u0026#39;); console.log(\u0026#39;code block\u0026#39;); ``` - Math: $x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$ Charts Wowchemy supports the popular Plotly format for interactive charts.\nSave your Plotly JSON in your page folder, for example line-chart.json, and then add the {{\u0026lt; chart data=\u0026#34;line-chart\u0026#34; \u0026gt;}} shortcode where you would like the chart to appear.\nDemo:\nYou might also find the Plotly JSON Editor useful.\nMath Wowchemy supports a Markdown extension for $\\LaTeX$ math. You can enable this feature by toggling the math option in your config/_default/params.yaml file.\nTo render inline or block math, wrap your LaTeX math with {{\u0026lt; math \u0026gt;}}$...${{\u0026lt; /math \u0026gt;}} or {{\u0026lt; math \u0026gt;}}$$...$${{\u0026lt; /math \u0026gt;}}, respectively. (We wrap the LaTeX math in the Wowchemy math shortcode to prevent Hugo rendering our math as Markdown. The math shortcode is new in v5.5-dev.)\nExample math block:\n{{\u0026lt; math \u0026gt;}} $$ \\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2} $$ {{\u0026lt; /math \u0026gt;}} renders as\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2}$$ Example inline math {{\u0026lt; math \u0026gt;}}$\\nabla F(\\mathbf{x}_{n})${{\u0026lt; /math \u0026gt;}} renders as $\\nabla F(\\mathbf{x}_{n})$.\nExample multi-line math using the math linebreak (\\\\):\n{{\u0026lt; math \u0026gt;}} $$f(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\ 1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases}$$ {{\u0026lt; /math \u0026gt;}} renders as\n$$ f(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\ 1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases} $$ Diagrams Wowchemy supports a Markdown extension for diagrams. You can enable this feature by toggling the diagram option in your config/_default/params.toml file or by adding diagram: true to your page front matter.\nAn example flowchart:\n```mermaid graph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2] ``` renders as\ngraph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2] An example sequence diagram:\n```mermaid sequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! ``` renders as\nsequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! An example Gantt diagram:\n```mermaid gantt section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d ``` renders ‚Ä¶","date":1562889600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562889600,"objectID":"07e02bccc368a192a0c76c44918396c3","permalink":"https://example.com/post/writing-technical-content/","publishdate":"2019-07-12T00:00:00Z","relpermalink":"/post/writing-technical-content/","section":"post","summary":"Wowchemy is designed to give technical content creators a seamless experience. You can focus on the content and Wowchemy handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.","tags":null,"title":"Writing technical content in Markdown","type":"post"},{"authors":["Cha√Øma Boughanmi"],"categories":null,"content":"","date":1555718400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555718400,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"https://example.com/publication/journal-article/","publishdate":"2019-04-20T00:00:00Z","relpermalink":"/publication/journal-article/","section":"publication","summary":"Creation of a neural network-based cardiovascular disease prediction model from a Cleveland database.","tags":["Python","Keras","CNN"],"title":"Heart disease classification","type":"publication"},{"authors":["Cha√Øma Boughanmi"],"categories":null,"content":"","date":1554595200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554595200,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"https://example.com/publication/preprint/","publishdate":"2019-04-07T00:00:00Z","relpermalink":"/publication/preprint/","section":"publication","summary":"A simple linear regression performed on a database taken from a study by Mercer in 2017.","tags":["Python"],"title":"Cost of living worldwide","type":"publication"},{"authors":["Cha√Øma Boughanmi"],"categories":[],"content":"from IPython.core.display import Image Image(\u0026#39;https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png\u0026#39;) print(\u0026#34;Welcome to Academic!\u0026#34;) Welcome to Academic! Install Python and JupyterLab Install Anaconda which includes Python 3 and JupyterLab.\nAlternatively, install JupyterLab with pip3 install jupyterlab.\nCreate or upload a Jupyter notebook Run the following commands in your Terminal, substituting \u0026lt;MY-WEBSITE-FOLDER\u0026gt; and \u0026lt;SHORT-POST-TITLE\u0026gt; with the file path to your Academic website folder and a short title for your blog post (use hyphens instead of spaces), respectively:\nmkdir -p \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ cd \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ jupyter lab index.ipynb The jupyter command above will launch the JupyterLab editor, allowing us to add Academic metadata and write the content.\nEdit your post metadata The first cell of your Jupter notebook will contain your post metadata (front matter).\nIn Jupter, choose Markdown as the type of the first cell and wrap your Academic metadata in three dashes, indicating that it is YAML front matter:\n--- title: My post\u0026#39;s title date: 2019-09-01 # Put any other Academic metadata here... --- Edit the metadata of your post, using the documentation as a guide to the available options.\nTo set a featured image, place an image named featured into your post‚Äôs folder.\nFor other tips, such as using math, see the guide on writing content with Academic.\nConvert notebook to Markdown jupyter nbconvert index.ipynb --to markdown --NbConvertApp.output_files_dir=. Example This post was created with Jupyter. The orginal files can be found at https://github.com/gcushen/hugo-academic/tree/master/exampleSite/content/post/jupyter\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567641600,"objectID":"6e929dc84ed3ef80467b02e64cd2ed64","permalink":"https://example.com/post/jupyter/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/post/jupyter/","section":"post","summary":"Learn how to blog in Academic using Jupyter notebooks","tags":[],"title":"Display Jupyter Notebooks with Academic","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\nFeatures Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides Controls Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;) Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne Two Three A fragment can accept two optional parameters:\nclass: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\nOnly the speaker can read these notes Press S key to view Themes black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}} Custom CSS Example Let‚Äôs make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; } Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://example.com/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"}]